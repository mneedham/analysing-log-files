{
  "tableName": "access_logs",
  "tableType": "REALTIME",
  "segmentsConfig": {
    "timeColumnName": "ts",
    "schemaName": "access_logs",
    "replication": "1",
    "replicasPerPartition": "1"
  },
  "tenants": {
    "broker": "DefaultTenant",
    "server": "DefaultTenant",
    "tagOverrideConfig": {}
  },
  "tableIndexConfig": {
    "invertedIndexColumns": [],
    "rangeIndexColumns": [],
    "autoGeneratedInvertedIndex": false,
    "createInvertedIndexDuringSegmentGeneration": false,
    "sortedColumn": [],
    "bloomFilterColumns": [],
    "loadMode": "MMAP",
    "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.topic.name": "enriched-access-logs",
      "stream.kafka.broker.list": "kafka:9093",
      "stream.kafka.consumer.type": "lowlevel",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest",
      "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
      "realtime.segment.flush.threshold.rows": "1000",
      "realtime.segment.flush.threshold.time": "24h",
      "realtime.segment.flush.segment.size": "100M"
    },
    "noDictionaryColumns": [],
    "onHeapDictionaryColumns": [],
    "varLengthDictionaryColumns": [],
    "enableDefaultStarTree": false,
    "enableDynamicStarTreeCreation": false,
    "aggregateMetrics": false,
    "nullHandlingEnabled": false
  },
  "metadata": {},
  "quota": {},
  "routing": {},
  "query": {},
  "ingestionConfig": {
    "transformConfigs": [
      {
        "columnName": "id",
        "transformFunction": "JSONPATH(agent, '$.id')"
      },
      {
        "columnName": "ts",
        "transformFunction": "FromDateTime(JSONPATH(expandedMessage, '$.ts'), 'YYYY-MM-dd''T''HH:mm:ssZ')"
      },
      {
        "columnName": "url",
        "transformFunction": "JSONPATH(expandedMessage, '$.url')"
      },
      {
        "columnName": "method",
        "transformFunction": "JSONPATH(expandedMessage, '$.method')"
      },
      {
        "columnName": "os.name",
        "transformFunction": "JSONPATH(expandedMessage, '$.os.name')"
      },
      {
        "columnName": "os.version",
        "transformFunction": "JSONPATH(expandedMessage, '$.os.version')"
      },
      {
        "columnName": "browser.name",
        "transformFunction": "JSONPATH(expandedMessage, '$.browser.name')"
      },
      {
        "columnName": "browser.version",
        "transformFunction": "JSONPATH(expandedMessage, '$.browser.version')"
      },
      {
        "columnName": "referer",
        "transformFunction": "JSONPATH(expandedMessage, '$.referer')"
      }
    ]
  },
  "isDimTable": false
}